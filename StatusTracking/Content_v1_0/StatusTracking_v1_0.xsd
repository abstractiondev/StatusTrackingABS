<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 rel. 3 sp1 (x64) (http://www.altova.com) by Kalle Launiala (Citrus Solutions Oy) -->
<xs:schema xmlns="http://tempuri.org/StatusTracking_v1_0.xsd" xmlns:mstns="http://tempuri.org/StatusTracking_v1_0.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://tempuri.org/StatusTracking_v1_0.xsd" elementFormDefault="qualified" id="StatusTracking_v1_0">
	<xs:element name="StatusTrackingAbstraction" type="StatusTrackingAbstractionType">
		<xs:key name="StatusItem">
			<xs:selector xpath="StatusItems/StatusItem"/>
			<xs:field xpath="@name"/>
		</xs:key>
		<xs:key name="Group">
			<xs:selector xpath="Groups/Group"/>
			<xs:field xpath="@name"/>
		</xs:key>
		<xs:keyref name="ContainingGroupRefItem" refer="StatusItem">
			<xs:selector xpath="Groups/Group/ItemRef"/>
			<xs:field xpath="@itemName"/>
		</xs:keyref>
		<xs:keyref name="ContainingGroupRefGroup" refer="Group">
			<xs:selector xpath="Groups/Group/GroupRef"/>
			<xs:field xpath="@groupName"/>
		</xs:keyref>
	</xs:element>
	<xs:complexType name="StatusValueType">
		<xs:attribute name="trafficLightIndicator" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="red"/>
					<xs:enumeration value="yellow"/>
					<xs:enumeration value="green"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="indicatorDisplayText" type="xs:string" use="required"/>
		<xs:attribute name="indicatorValue" type="xs:decimal" use="required"/>
	</xs:complexType>
	<xs:complexType name="StatusItemType">
		<xs:sequence>
			<xs:element name="StatusValue" type="StatusValueType"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Technical name that is mapped in groups.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="displayName" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Display name</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Detailed description of item</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="StatusItemsType">
		<xs:sequence>
			<xs:element name="StatusItem" type="StatusItemType" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="scopeName" type="xs:string" default="">
			<xs:annotation>
				<xs:documentation>(Opt = "") Scope name of the status items. 

Required for multiple scopes during transformation process, such as series of operation from different domains.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="GroupType">
		<xs:sequence>
			<xs:element name="ItemRef" type="ItemRefType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="GroupRef" type="GroupRefType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Technical name used in hierarchy mapping.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Detailed description of item</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="groupRole" default="None">
			<xs:annotation>
				<xs:documentation>(Opt = "None") Group Role.

None = Group, that can contain items and be member of other groups.

Root = Group, that can contain items and be member of other groups, but also is a root of an independent unit. This can be for example a feature set in a software.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="None">
						<xs:annotation>
							<xs:documentation>Group, that can contain items and be member of other groups.</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Root">
						<xs:annotation>
							<xs:documentation>Group, that can contain items and be member of other groups, but also is a root of an independent unit. This can be for example a feature set in a software.</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="GroupsType">
		<xs:sequence>
			<xs:element name="Group" type="GroupType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ItemRefType">
		<xs:attribute name="itemName" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="GroupRefType">
		<xs:attribute name="groupName" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="ContainingGroupType">
		<xs:sequence>
			<xs:element name="ItemRef" type="ItemRefType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="GroupRef" type="GroupRefType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="groupName" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="RelationsType">
		<xs:sequence>
			<xs:element name="ContainingGroup" type="ContainingGroupType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StatusTrackingAbstractionType">
		<xs:sequence>
			<xs:element name="StatusItems" type="StatusItemsType"/>
			<xs:element name="Groups" type="GroupsType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
